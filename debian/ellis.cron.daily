#!/bin/sh

# @file ellis.cron.daily
#
# Project Clearwater - IMS in the Cloud
# Copyright (C) 2013  Metaswitch Networks Ltd
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the
# Free Software Foundation, either version 3 of the License, or (at your
# option) any later version, along with the "Special Exception" for use of
# the program along with SSL, set forth below. This program is distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;
# without even the implied warranty of MERCHANTABILITY or FITNESS FOR
# A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details. You should have received a copy of the GNU General Public
# License along with this program.  If not, see
# <http://www.gnu.org/licenses/>.
#
# The author can be reached by email at clearwater@metaswitch.com or by
# post at Metaswitch Networks Ltd, 100 Church St, Enfield EN2 6BQ, UK
#
# Special Exception
# Metaswitch Networks Ltd  grants you permission to copy, modify,
# propagate, and distribute a work formed by combining OpenSSL with The
# Software, or a work derivative of such a combination, even if such
# copying, modification, propagation, or distribution would otherwise
# violate the terms of the GPL. You must comply with the GPL in all
# respects for all of the code used other than OpenSSL.
# "OpenSSL" means OpenSSL toolkit software distributed by the OpenSSL
# Project and licensed under the OpenSSL Licenses, or a work based on such
# software and licensed under the OpenSSL Licenses.
# "OpenSSL Licenses" means the OpenSSL License and Original SSLeay License
# under which the OpenSSL Project distributes the OpenSSL toolkit software,
# as those licenses appear in the file LICENSE-OPENSSL.

. /etc/clearwater/config

# First find the expired users.  We pipe a SQL command into mysql and log if
# the query fails.
USERS=$(echo "use ellis; SELECT email FROM users WHERE expires < NOW();" |
        mysql -s 2>/tmp/ellis.cron.daily.$$) ||
( logger -p daemon.err -t ellis.cron.daily Expired users SQL query failed... ;
  logger -p daemon.err -t ellis.cron.daily -f /tmp/ellis.cron.daily.$$ )
rm /tmp/ellis.cron.daily.$$

# Now spin through the users we got, deleting them.  (If we got none, this is a
# no-op.)
for USER in $USERS
do
  # Issue a curl request to delete the user, logging if this fails.
  logger -p daemon.notice -t ellis.cron.daily "Deleting expired user $USER"
  OUT=$(curl -s -X DELETE -H "NGV-API-Key: ${ellis_api_key}" http://127.0.0.1/accounts/$USER) ||
  logger -p daemon.err -t ellis.cron.daily "curl reported error $? when deleting expired user $USER"

  # A successful delete returns no response.  If we got a response, log it.
  [ -z "$OUT" ] || logger -p daemon.err -t ellis.cron.daily "Deleting expired user $USER failed with response $OUT"
done

