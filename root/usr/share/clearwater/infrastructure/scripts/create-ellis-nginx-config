#!/bin/bash

# @file create-ellis-nginx-config
#
# Project Clearwater - IMS in the Cloud
# Copyright (C) 2014 Metaswitch Networks Ltd
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the
# Free Software Foundation, either version 3 of the License, or (at your
# option) any later version, along with the "Special Exception" for use of
# the program along with SSL, set forth below. This program is distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;
# without even the implied warranty of MERCHANTABILITY or FITNESS FOR
# A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details. You should have received a copy of the GNU General Public
# License along with this program.  If not, see
# <http://www.gnu.org/licenses/>.
#
# The author can be reached by email at clearwater@metaswitch.com or by
# post at Metaswitch Networks Ltd, 100 Church St, Enfield EN2 6BQ, UK
#
# Special Exception
# Metaswitch Networks Ltd  grants you permission to copy, modify,
# propagate, and distribute a work formed by combining OpenSSL with The
# Software, or a work derivative of such a combination, even if such
# copying, modification, propagation, or distribution would otherwise
# violate the terms of the GPL. You must comply with the GPL in all
# respects for all of the code used other than OpenSSL.
# "OpenSSL" means OpenSSL toolkit software distributed by the OpenSSL
# Project and licensed under the OpenSSL Licenses, or a work based on such
# software and licensed under the OpenSSL Licenses.
# "OpenSSL Licenses" means the OpenSSL License and Original SSLeay License
# under which the OpenSSL Project distributes the OpenSSL toolkit software,
# as those licenses appear in the file LICENSE-OPENSSL.

# This file creates an nginx config file for ellis.

. /etc/clearwater/config

if [ -n "$home_domain" ] && [ -n "$public_hostname" ] && [ -n "$local_ip" ] && [ -n "$public_ip" ]
then
  ellis_hostname=${ellis_hostname:-ellis.$home_domain}
  site_file=/etc/nginx/sites-available/ellis
  enabled_file=/etc/nginx/sites-enabled/ellis
  ssl_cert_file=/etc/nginx/ssl/ellis.crt
  ssl_key_file=/etc/nginx/ssl/ellis.key
  temp_file=$(mktemp ellis.nginx.XXXXXXXX)
  let sock_seq_end=$(cat /proc/cpuinfo | grep processor | wc -l)*2-1

  cat > $temp_file << EOF1
upstream http_ellis {
EOF1

  for sock_index in $(seq 0 $sock_seq_end)
  do
    echo "        server unix:/tmp/.ellis-sock-$sock_index;" >> $temp_file
  done

  cat >> $temp_file << EOF2
        # The minimum number of idle connections to keep alive to the upstream.
        keepalive 16;
}
EOF2

  if [ -e "$ssl_cert_file" ] && [ -e "$ssl_key_file" ]
  then
    cat >> $temp_file << EOF3
server {
        ssl on;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_session_timeout 5m;
        ssl_ciphers "HIGH:!aNULL:!MD5 or HIGH:!aNULL:!MD5:!3DES";
        ssl_prefer_server_ciphers on;

        ssl_certificate $ssl_cert_file;
        ssl_certificate_key $ssl_key_file;

        listen       [::]:443 ipv6only=off;
        server_name  $ellis_hostname $local_ip $public_ip $public_hostname;

        location / {
                proxy_pass http://http_ellis;
                proxy_http_version 1.1;

                # The client may have instructed the server to close the
                # connection - do not forward this upstream.
                proxy_set_header Connection "";
        }
}

server {
        listen       [::]:80 default_server; # ipv6only=off is set in the base config
        server_name  $ellis_hostname $local_ip $public_ip $public_hostname;

        return       301   https://\$host\$request_uri;
}
EOF3

  else

    cat >> $temp_file << EOF4
server {
        listen       [::]:80 default_server; # ipv6only=off is set in the base config
        server_name  $ellis_hostname $local_ip $public_ip $public_hostname;

        location / {
                proxy_pass http://http_ellis;
                proxy_http_version 1.1;

                # The client may have instructed the server to close the
                # connection - do not forward this upstream.
                proxy_set_header Connection "";

                # Preserve the Ellis hostname.
                proxy_set_header Host $ellis_hostname;
        }
}
EOF4

  fi

  if ! diff $temp_file $enabled_file > /dev/null 2>&1
  then
    # Update the site file
    mv $temp_file $site_file

    # Enable the homestead-prov nginx site
    if ( nginx_ensite ellis > /dev/null )
    then
      service nginx stop
    fi
  else
    rm $temp_file
  fi
fi
